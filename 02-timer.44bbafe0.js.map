{"mappings":"AAAA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,eAC/BC,QAASF,SAASC,cAAc,gBAChCE,UAAWH,SAASC,cAAc,kBAClCG,UAAWJ,SAASC,cAAc,kBAClCI,SAAUL,SAASC,cAAc,iBAGnC,IAAIK,EAAa,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,IAG/C,MAAMC,EAAQ,CACZC,WAAY,KACZC,QACEC,KAAKF,WAAaG,aAAY,KAC5B,IAAIC,EAAO,IAAIN,KACXO,EAAYR,EAAaO,EAC7B,MAAME,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAwBpC,SAAmBC,GAEjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNP,EAAOS,EAAIC,KAAKC,MAAMP,EAAKI,IAE3BP,EAAQQ,EAAIC,KAAKC,MAAMP,EAAMI,EAAOD,IAEpCL,EAAUO,EAAIC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,IAE/CH,EAAUM,EAAIC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,IAEhE,MAAO,C,KAAEL,E,MAAMC,E,QAAOC,E,QAASC,E,CAxCeS,CAAUb,IAa1D,SAA8BC,EAAMC,EAAOC,EAASC,GAClDpB,EAAKC,OAAO6B,YAAcb,EAC1BjB,EAAKI,QAAQ0B,YAAcZ,EAC3BlB,EAAKK,UAAUyB,YAAcX,EAC7BnB,EAAKM,UAAUwB,YAAcV,C,CAhBzBW,CAAqBd,EAAMC,EAAOC,EAASC,EAAQ,GAClD,I,EAELY,OAEEC,cAAcpB,KAAKF,W,GAcvB,SAASe,EAAIQ,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAZnCpC,EAAKO,SAAS8B,iBAAiB,QAAS3B,EAAME,MAAM0B,KAAK5B","sources":["src/js/02-timer.js"],"sourcesContent":["const refs = {\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n  startBtn: document.querySelector('[data-start]'),\n};\n\nlet futureDate = new Date(2024, 2, 24, 13, 12, 12);\nlet isActive = false;\n\nconst timer = {\n  intervalId: null,\n  start() {\n    this.intervalId = setInterval(() => {\n      let date = new Date();\n      let timerTime = futureDate - date;\n      const { days, hours, minutes, seconds } = convertMs(timerTime);\n      updateTimerInterface(days, hours, minutes, seconds);\n    }, 1000);\n  },\n  stop() {\n    // 00:00:00:00\n    clearInterval(this.intervalId);\n  },\n};\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\n\n// timer.start();\n\nfunction updateTimerInterface(days, hours, minutes, seconds) {\n  refs.daysEl.textContent = days;\n  refs.hoursEl.textContent = hours;\n  refs.minutesEl.textContent = minutes;\n  refs.secondsEl.textContent = seconds;\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = pad(Math.floor(ms / day));\n  // Remaining hours\n  const hours = pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["$40d383fb392a7037$var$refs","daysEl","document","querySelector","hoursEl","minutesEl","secondsEl","startBtn","$40d383fb392a7037$var$futureDate","Date","$40d383fb392a7037$var$timer","intervalId","start","this","setInterval","date","timerTime","days","hours","minutes","seconds","ms","second","minute","hour","day","$40d383fb392a7037$var$pad","Math","floor","$40d383fb392a7037$var$convertMs","textContent","$40d383fb392a7037$var$updateTimerInterface","stop","clearInterval","value","String","padStart","addEventListener","bind"],"version":3,"file":"02-timer.44bbafe0.js.map"}